<!-- small_stmt: (expr_stmt | del_stmt | pass_stmt | flow_stmt |
             import_stmt | global_stmt | nonlocal_stmt | assert_stmt) -->
<scheme name="small_stmt">
	<inherit scheme="del_stmt"/>
	<inherit scheme="pass_stmt"/>
	<inherit scheme="import_stmt"/>
	<inherit scheme="global_stmt"/>
	<inherit scheme="expr_stmt"/>
<!-- flow_stmt: break_stmt | continue_stmt | return_stmt | raise_stmt | yield_stmt -->
	<!-- <inherit scheme="flow_stmt"/> -->
<!-- nonlocal_stmt: 'nonlocal' NAME (',' NAME)* -->
	<!-- <inherit scheme="nonlocal_stmt"/> -->
<!-- assert_stmt: 'assert' test [',' test] -->
	<!-- <inherit scheme="assert_stmt"/> -->
</scheme>

<!-- del_stmt: 'del' exprlist -->
<scheme name="del_stmt">
	<block start="/\s*(del)\s*/" end="//" scheme="exprlist" region01="Keyword"/>
</scheme>

<!-- global_stmt: 'global' NAME (',' NAME)* -->
<scheme name="global_stmt">
	<block start="/\s*(global)\s*/" end="//" scheme="NAMElist" region01="Keyword"/>
</scheme>

<scheme name="pass_stmt">
	<regexp match="/\s*(pass)/" region1="Keyword"/>
</scheme>

<!-- import_stmt: import_name | import_from -->
<scheme name="import_stmt">
	<inherit scheme="import_name"/>
	<inherit scheme="import_from"/>
</scheme>

<!-- import_name: 'import' dotted_as_names -->
<scheme name="import_name">
	<block start="/\s*(import)\s*/" end="//" scheme="dotted_as_names" region01="Keyword"/>
</scheme>

<!-- dotted_as_names: dotted_as_name (',' dotted_as_name)* -->
<scheme name="dotted_as_names">
	<inherit scheme="comma_separated">
		<virtual scheme="def:empty" subst-scheme="dotted_as_name"/>
	</inherit>
</scheme>

<!-- import_from:
(
	'from'
	(
		(
			'.'
			|
			'...'
		)* dotted_name
		|
		(
			'.'
			|
			'...'
		)+
	)
	'import'
	(
		'*'
		|
		'(' import_as_names ')'
		|
		import_as_names
	)
)
-->
<scheme name="import_from">
	<block start="/\s*(from)/" end="//" scheme="import_from_body" region01="Keyword" region00="PairStart" region10="PairEnd"/>
</scheme>

<scheme name="import_from_body">
	<block start="/~(from)?#4\s*/" end="/\s*\Mimport/" scheme="dot_dotted_name"/>
	<block start="/(import)\s*/" end="//" scheme="import_from_body2" region01="Keyword"/>
</scheme>

<scheme name="dot_dotted_name">
	<block start="/~\.+/" end="//" scheme="dotted_name" region00="Delimiter"/>
	<inherit scheme="dotted_name"/>
</scheme>

<scheme name="import_from_body2">
	<regexp match="/~\*/" region="Operator"/>
	<block start="/~((?{PairStart}\())\s*/" end="/\s*((?{PairEnd}\)))/" scheme="import_as_names" region01="Delimiter" region11="Delimiter" content-priority="low"/>
	<inherit scheme="import_as_names"/>
</scheme>

<!-- import_as_names: import_as_name (',' import_as_name)* [','] -->
<scheme name="import_as_names">
	<inherit scheme="comma_separated">
		<virtual scheme="def:empty" subst-scheme="import_as_name"/>
	</inherit>
</scheme>

<!-- import_as_name: NAME ['as' NAME] -->
<scheme name="import_as_name">
	<inherit scheme="as_separated">
		<virtual scheme="def:empty" subst-scheme="NAME"/>
	</inherit>
</scheme>
