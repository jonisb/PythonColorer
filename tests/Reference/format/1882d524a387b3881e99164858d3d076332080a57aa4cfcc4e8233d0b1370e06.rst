.. code:: python
    # Accessing arguments by position:
    s = '{0}, {1}, {2}'.format('a', 'b', 'c')
    s = '{}, {}, {}'.format('a', 'b', 'c')  # 3.1+ only
    s = '{2}, {1}, {0}'.format('a', 'b', 'c')
    s = '{2}, {1}, {0}'.format(*'abc')      # unpacking argument sequence
    s = '{0}{1}{0}'.format('abra', 'cad')   # arguments' indices can be repeated

.. code:: html
    <span class='python36-CommentEdge def-CommentEdge def-Comment def-Syntax'>#</span><span class='python36-LineComment def-LineComment def-Comment def-Syntax'> Accessing arguments by position:</span>
    <span class='python36-Identifier def-Identifier'>s</span> <span class='python36-Delimiter def-Symbol'>=</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>{0}, {1}, {2}</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>.</span><span class='python36-Identifier def-Identifier'>format</span><span class='python36-Delimiter def-Symbol'>(</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>a</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>,</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>b</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>,</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>c</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>)</span>
    <span class='python36-Identifier def-Identifier'>s</span> <span class='python36-Delimiter def-Symbol'>=</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>{}, {}, {}</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>.</span><span class='python36-Identifier def-Identifier'>format</span><span class='python36-Delimiter def-Symbol'>(</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>a</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>,</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>b</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>,</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>c</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>)</span>  <span class='python36-CommentEdge def-CommentEdge def-Comment def-Syntax'>#</span><span class='python36-LineComment def-LineComment def-Comment def-Syntax'> 3.1+ only</span>
    <span class='python36-Identifier def-Identifier'>s</span> <span class='python36-Delimiter def-Symbol'>=</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>{2}, {1}, {0}</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>.</span><span class='python36-Identifier def-Identifier'>format</span><span class='python36-Delimiter def-Symbol'>(</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>a</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>,</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>b</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>,</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>c</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>)</span>
    <span class='python36-Identifier def-Identifier'>s</span> <span class='python36-Delimiter def-Symbol'>=</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>{2}, {1}, {0}</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>.</span><span class='python36-Identifier def-Identifier'>format</span><span class='python36-Delimiter def-Symbol'>(</span><span class='python36-Operator def-Operator def-Symbol'>*</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>abc</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>)</span>      <span class='python36-CommentEdge def-CommentEdge def-Comment def-Syntax'>#</span><span class='python36-LineComment def-LineComment def-Comment def-Syntax'> unpacking argument sequence</span>
    <span class='python36-Identifier def-Identifier'>s</span> <span class='python36-Delimiter def-Symbol'>=</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>{0}{1}{0}</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>.</span><span class='python36-Identifier def-Identifier'>format</span><span class='python36-Delimiter def-Symbol'>(</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>abra</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>,</span> <span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>cad</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>)</span>   <span class='python36-CommentEdge def-CommentEdge def-Comment def-Syntax'>#</span><span class='python36-LineComment def-LineComment def-Comment def-Syntax'> arguments' indices can be repeated</span>
