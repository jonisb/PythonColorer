.. code:: python
    # A consequence of sharing the same syntax as regular string literals is that characters in the replacement fields must not conflict with the quoting used in the outer formatted string literal:
    f"abc {a["x"]} def"  # error: outer string literal ended prematurely
    f"abc {a['x']} def"  # workaround: use different quoting

.. code:: html
    <span class='python36-CommentEdge def-CommentEdge def-Comment def-Syntax'>#</span><span class='python36-LineComment def-LineComment def-Comment def-Syntax'> A consequence of sharing the same syntax as regular string literals is that characters in the replacement fields must not conflict with the quoting used in the outer formatted string literal:</span>
    <span class='python36-StringPrefix def-Prefix'>f</span><span class='python36-StringEdge def-StringEdge def-String'>"</span><span class='python36-String def-String'>abc </span><span class='python36-Delimiter def-Symbol'>{</span><span class='python36-Identifier def-Identifier'>a</span><span class='python36-Delimiter def-Symbol'>[</span><span class='python36-Error def-Error'>"</span><span class='python36-Error def-Error'>x</span><span class='python36-Error def-Error'>"</span><span class='python36-Delimiter def-Symbol'>]</span><span class='python36-Delimiter def-Symbol'>}</span><span class='python36-String def-String'> def</span><span class='python36-StringEdge def-StringEdge def-String'>"</span>  <span class='python36-CommentEdge def-CommentEdge def-Comment def-Syntax'>#</span><span class='python36-LineComment def-LineComment def-Comment def-Syntax'> error: outer string literal ended prematurely</span>
    <span class='python36-StringPrefix def-Prefix'>f</span><span class='python36-StringEdge def-StringEdge def-String'>"</span><span class='python36-String def-String'>abc </span><span class='python36-Delimiter def-Symbol'>{</span><span class='python36-Identifier def-Identifier'>a</span><span class='python36-Delimiter def-Symbol'>[</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-String def-String'>x</span><span class='python36-StringEdge def-StringEdge def-String'>'</span><span class='python36-Delimiter def-Symbol'>]</span><span class='python36-Delimiter def-Symbol'>}</span><span class='python36-String def-String'> def</span><span class='python36-StringEdge def-StringEdge def-String'>"</span>  <span class='python36-CommentEdge def-CommentEdge def-Comment def-Syntax'>#</span><span class='python36-LineComment def-LineComment def-Comment def-Syntax'> workaround: use different quoting</span>
