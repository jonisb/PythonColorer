<?xml version="1.0" encoding="iso-8859-1"?>
<type name="python36">
    <region name="Error" parent="def:Error"/>
    <region name="Deprecated" parent="def:Debug" description="Show deprecated Python feature that will be removed in a later version"/>
    <region name="PEP8" parent="def:Debug" description="PEP 8 -- Style Guide for Python Code"/>

    <region name="PairStart" parent="def:PairStart" description="Paired struct start"/>
    <region name="PairEnd"  parent="def:PairEnd" description="Paired struct end"/>
    <region name="Keyword" parent="def:Keyword"/>
    <region name="Parameter" parent="def:Parameter" description="Parameter declaration"/>
    <region name="Delimiter" parent="def:Symbol"/>
    <region name="Directive" parent="def:Directive" description="Compiler/Preprocessor directive"/>
    <region name="DirectiveContent" parent="def:DirectiveContent" description="Internal directive text"/>
    <region name="DirectiveEdge"    parent="def:DirectiveEdge" description="Directive edges"/>

    <entity name="code_end" value="\M(^\.\. code|%def:neverMatch;)"/>

	&py36NUMBER;
	&py36NAME;
	&py36STRING;
	&py36COMMENT;

	<scheme name="python36">
      	<inherit scheme="Python_File_Header"/>
      	<inherit scheme="py36_body"/>
	</scheme>

    <scheme name="Python_File_Header">
      	<inherit scheme="shebang"/>
      	<inherit scheme="File_Encoding"/>
    </scheme>

<!--Shebang (Unix): https://en.wikipedia.org/wiki/Shebang_%28Unix%29-->
<!-- PEP 397: Python launcher for Windows: https://www.python.org/dev/peps/pep-0397/-->
    <scheme name="shebang">
      	<block start="/(#!)\s*(\S*)\s*(python(3(\.\d+(-32)?)?)?).*/" end="/%code_end;/" scheme="File_Encoding" region00="Directive" region01="DirectiveEdge" region03="DirectiveContent" content-priority="low"/>
    </scheme>

<!--Encoding declarations: https://docs.python.org/3/reference/lexical_analysis.html#encoding-declarations-->
    <scheme name="File_Encoding">
      <block start="/^\s*(#).*(coding)([=:])\s*(ascii|utf-8).*$/" end="/%code_end;/" scheme="py36_body" region00="LineComment" region01="CommentEdge" region02="Keyword" region03="Delimiter" region04="Parameter" content-priority="low"/>
    </scheme>

	<scheme name="py36_body">
		<inherit scheme="COMMENT"/>
		<inherit scheme="test"/>
		<regexp match="/\S/" region="Error" priority="low"/>
	</scheme>

<!--test: or_test ['if' or_test 'else' test] | lambdef-->
    <scheme name="test">
		<inherit scheme="atom"/>
    </scheme>

<!--atom:
(
	'(' [yield_expr|testlist_comp] ')'
	|
	'[' [testlist_comp] ']'
	|
	'{' [dictorsetmaker] '}'
	|
	NAME | NUMBER | STRING+ | '...'
)
-->
    <scheme name="atom">
		<inherit scheme="NUMBER"/>
		<inherit scheme="STRING"/>
		<inherit scheme="NAME"/>
    </scheme>
</type>
