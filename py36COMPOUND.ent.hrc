<scheme name="compound_stmt">
	<inherit scheme="if_stmt"/>
	<inherit scheme="funcdef"/>
</scheme>

<!-- if_stmt: 'if' test ':' suite ('elif' test ':' suite)* ['else' ':' suite] -->
<scheme name="if_stmt">
	<block start="/^(%INDENT;*)\M(?{PairStart}if)/" end="/^($|\y1%INDENT;)?!/" scheme="if_block" region10="PairEnd"/>
	<block start="/^(%INDENT;*)\Melif/" end="/^($|\y1%INDENT;)?!/" scheme="elif_block"/>
	<block start="/^(%INDENT;*)\Melse/" end="/^($|\y1%INDENT;)?!/" scheme="else_block"/>
</scheme>

<scheme name="if_block">
	<block start="/~(if)\s*/" end="/\s*\M:/" scheme="test" region01="Keyword"/>
	<inherit scheme="suite"/>
</scheme>

<scheme name="elif_block">
	<block start="/~(elif)\s*/" end="/\s*\M:/" scheme="test" region01="Keyword"/>
	<inherit scheme="suite"/>
</scheme>

<scheme name="else_block">
	<regexp match="/~(else)\s*\M:/" region1="Keyword"/>
	<inherit scheme="suite"/>
</scheme>

<!--
funcdef: 'def' NAME parameters ['->' test] ':' suite

parameters: '(' [typedargslist] ')'

typedargslist:
(
	tfpdef ['=' test] ( ',' tfpdef ['=' test] )*
	[
		','
		[
			'*' [tfpdef] ( ',' tfpdef ['=' test] )* [',' ['**' tfpdef [',']]]
			|
			'**' tfpdef [',']
		]
	]
  	|
  	'*' [tfpdef] ( ',' tfpdef ['=' test] )* [',' ['**' tfpdef [',']]]
  	|
  	'**' tfpdef [',']
)

tfpdef: NAME [':' test]
-->

<scheme name="funcdef">
	<block start="/^(%INDENT;*)\b\M((?{PairStart}def))/" end="/^($|\y1%INDENT;)?!/" scheme="def_block" region02="Keyword" region10="PairEnd"/>
</scheme>

<scheme name="def_block">
	<block start="/~(def)\s*/" end="/\s*\M:/" scheme="def_block2"/>
	<inherit scheme="suite"/>
</scheme>

<scheme name="def_block2">
	<block start="/\(/" end="/\)/" scheme="typedargslist" region00="Delimiter" region10="Delimiter"/>
	<inherit scheme="NAME"/>
</scheme>

<scheme name="typedargslist">
	<block start="/\s*(\*\*)\s*/" end="//" scheme="tfpdef" region01="Operator"/>
	<block start="/\s*(\*)\s*/" end="//" scheme="tfpdef" region01="Operator"/>
	<block start="/\s*(=)\s*/" end="//" scheme="test" region01="Delimiter"/>
	<block start="/\s*(,)\s*/" end="//" scheme="typedargslist" region01="Delimiter"/>
	<inherit scheme="tfpdef"/>
</scheme>

<scheme name="tfpdef"> <!-- TODO -->
	<block start="/\s*(:)\s*/" end="//" scheme="test" region01="Delimiter"/>
	<inherit scheme="NAME"/>
</scheme>
